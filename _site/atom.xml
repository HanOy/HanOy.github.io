<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rasmus Andersson</title>
  <link href="http://rsms.me/atom.xml" rel="self"/>
  <link href="http://rsms.me/"/>
  <updated>2016-06-28T16:47:06+08:00</updated>
  <id>http://ouyanghan.com/</id>
  <author>
    <name>ouyanghan</name>
    <email>oyh3745@gmail.com</email>
  </author>
  
  <entry>
    <title>冲动是可以用写代码来抑制的吧</title>
    <link href="http://ouyanghan.com/mood"/>
    <updated>2016-06-13T00:00:00+08:00</updated>
    <id>http://ouyanghan.com/mood</id>
    <content type="html">&lt;p&gt;心血来潮想写点啥&lt;/p&gt;

&lt;p&gt;写着写着&lt;/p&gt;

&lt;p&gt;又来bug了&lt;/p&gt;

&lt;p&gt;bug解决完了&lt;/p&gt;

&lt;p&gt;潮已经退了&lt;/p&gt;
</content>
    <author>
      <name>ouyanghan</name>
      <uri>http://ouyanghan.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>开源翻墙利器</title>
    <link href="http://ouyanghan.com/lantern"/>
    <updated>2016-05-04T00:00:00+08:00</updated>
    <id>http://ouyanghan.com/lantern</id>
    <content type="html">&lt;p&gt;最近“魏则西事件”整的风风火火，大家多多少少对百度都有不少意见吧。&lt;/p&gt;

&lt;p&gt;想用google吗？&lt;/p&gt;

&lt;p&gt;给大家推荐一个开源的翻墙工具，千万不要用来干坏事哦:P&lt;/p&gt;

&lt;p&gt;从同事那里发现的，简直牛逼。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/getlantern/lantern&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;下载地址&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta.apk&quot;&gt;Android&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta.exe&quot;&gt;Windows XP SP 3 and above&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta.dmg&quot;&gt;OSX 10.8 and above&lt;/a&gt;&lt;/p&gt;
</content>
    <author>
      <name>ouyanghan</name>
      <uri>http://ouyanghan.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>docx4j使用小结</title>
    <link href="http://ouyanghan.com/docx4j"/>
    <updated>2016-03-31T00:00:00+08:00</updated>
    <id>http://ouyanghan.com/docx4j</id>
    <content type="html">&lt;p&gt;又忙活了一段时间，新项目还在搭，趁着有空总结一下前段时间用过的docx4j。&lt;/p&gt;

&lt;p&gt;当时的需求是这样的，客户提供了word的报表模板，我们需要根据查出的数据导出为pdf。&lt;/p&gt;

&lt;p&gt;面临的问题是：word模板比较复杂，不是单纯的填空，要根据数据的情况分多行展现。&lt;/p&gt;

&lt;p&gt;最后我选择了用docx4j来实现。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=PAJ3dW50dwcJ71R02ZbTvhfeuglMJJ0EXulYjJzjF6W76n67fhoLJ4v5XKOep1wJB4bplI6xT69rPkRU9qBZ__&quot;&gt;百度百科&lt;/a&gt;：docx4j是一个Java类库用于创建和操作Microsoft Open XML(Word docx, Powerpoint pptx, 和 Excel xlsx)文件。&lt;/p&gt;

&lt;p&gt;需要注意的是，它操作的是.docx、.pptx和.xlsx文件，这些后缀的文件本质上与.doc、.ppt和.xls是不同的。&lt;/p&gt;

&lt;p&gt;可以这样理解：docx是基于xml文件来实现的，当你用压缩工作打开一个.docx文档，你就能看到里面的xml了。&lt;/p&gt;

&lt;p&gt;这就是为什么docx4j严重依赖JAXB了，因为它要操作的其实是xml文件。&lt;/p&gt;

&lt;p&gt;来看一下&lt;a href=&quot;https://github.com/plutext/docx4j/tree/master/src/samples/docx4j/org/docx4j/samples&quot;&gt;官方github的demo&lt;/a&gt;:&lt;/p&gt;

&lt;h2 id=&quot;docxcreatewordprocessingmldocumentjava&quot;&gt;新建一个.docx文件，CreateWordprocessingMLDocument.java&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public static void main(String[] args) throws Exception {
	WordprocessingMLPackage wordMLPackage = WordprocessingMLPackage.createPackage();
	MainDocumentPart mdp = wordMLPackage.getMainDocumentPart();
	
	// Example 1: add text in Title style
	mdp.addStyledParagraphOfText(&quot;Title&quot;, &quot;Example 1&quot;);

	// Example 2: add normal paragraph (no explicit style)
	mdp.addParagraphOfText(&quot;Example 2&quot;);

	// Example 4: Here is an easier way:
	String str = &quot;&amp;lt;w:p xmlns:w=\&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main\&quot; &amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:b /&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;Example 4&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&quot;;
    
	mdp.addObject(org.docx4j.XmlUtils.unmarshalString(str));
    
	// Example 5: Let&#39;s add a table
	int writableWidthTwips = wordMLPackage.getDocumentModel().getSections().get(0).getPageDimensions().getWritableWidthTwips();
	int cols = 3;
	int cellWidthTwips = new Double(Math.floor((writableWidthTwips/cols))).intValue();
    
	Tbl tbl = TblFactory.createTable(3, 3, cellWidthTwips);
	mdp.addObject(tbl);
    
	// Pretty print the main document part
	System.out.println(XmlUtils.marshaltoString(mdp.getJaxbElement(), true, true) );
	
	// save it
	String filename = System.getProperty(&quot;user.dir&quot;) + &quot;/OUT_CreateWordprocessingMLDocument.docx&quot;;
	wordMLPackage.save(new java.io.File(filename) );
	System.out.println(&quot;Saved &quot; + filename);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;example 3 有点烦，就给去掉了。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	MainDocumentPart mdp = wordMLPackage.getMainDocumentPart();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这段代码mdp获取的到的，其实就是用压缩工具打开的.docx文档中的document.xml文件的内容，
而我们对mdp操作也就是直接操作document.xml，最后通过document.xml来生成.docx文档。&lt;/p&gt;

&lt;p&gt;上面的所有的例子也就是修改document.xml。&lt;/p&gt;

&lt;p&gt;大家看example 4 ，可以直接把xml的内容放进document.xml中。&lt;/p&gt;

&lt;p&gt;根据我的需求，既然word模板有了，我就解压出来找到document.xml，把里面的内容复制出来再清空。通过代码自己去新增，所以我需要修改复制出来的内容，在需要赋值的地方，把查出来的值放进去。虽然比较笨，但还是保持了word文档的一致性，简直一模一样。一些代码如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for (RepairMaterialsPojo material : pojo.getMaterials()) {
    String tr = &quot;&amp;lt;w:tr&amp;gt;&amp;lt;w:tblPrEx&amp;gt;&amp;lt;w:tblBorders&amp;gt;&amp;lt;w:top w:color=\&quot;auto\&quot; w:space=\&quot;0\&quot; w:sz=\&quot;12\&quot; w:val=\&quot;single\&quot;/&amp;gt;&amp;lt;w:left w:color=\&quot;auto\&quot; w:space=\&quot;0\&quot; w:sz=\&quot;12\&quot; w:val=\&quot;single\&quot;/&amp;gt;&amp;lt;w:bottom w:color=\&quot;auto\&quot; w:space=\&quot;0\&quot; w:sz=\&quot;12\&quot; w:val=\&quot;single\&quot;/&amp;gt;&amp;lt;w:right w:color=\&quot;auto\&quot; w:space=\&quot;0\&quot; w:sz=\&quot;12\&quot; w:val=\&quot;single\&quot;/&amp;gt;&amp;lt;w:insideH w:color=\&quot;auto\&quot; w:space=\&quot;0\&quot; w:sz=\&quot;6\&quot; w:val=\&quot;single\&quot;/&amp;gt;&amp;lt;w:insideV w:color=\&quot;auto\&quot; w:space=\&quot;0\&quot; w:sz=\&quot;6\&quot; w:val=\&quot;single\&quot;/&amp;gt;&amp;lt;/w:tblBorders&amp;gt;&amp;lt;w:tblLayout w:type=\&quot;fixed\&quot;/&amp;gt;&amp;lt;w:tblCellMar&amp;gt;&amp;lt;w:top w:type=\&quot;dxa\&quot; w:w=\&quot;0\&quot;/&amp;gt;&amp;lt;w:left w:type=\&quot;dxa\&quot; w:w=\&quot;108\&quot;/&amp;gt;&amp;lt;w:bottom w:type=\&quot;dxa\&quot; w:w=\&quot;0\&quot;/&amp;gt;&amp;lt;w:right w:type=\&quot;dxa\&quot; w:w=\&quot;108\&quot;/&amp;gt;&amp;lt;/w:tblCellMar&amp;gt;&amp;lt;/w:tblPrEx&amp;gt;&amp;lt;w:trPr&amp;gt;&amp;lt;w:trHeight w:hRule=\&quot;atLeast\&quot; w:val=\&quot;302\&quot;/&amp;gt;&amp;lt;/w:trPr&amp;gt;&amp;lt;w:tc&amp;gt;&amp;lt;w:tcPr&amp;gt;&amp;lt;w:tcW w:type=\&quot;dxa\&quot; w:w=\&quot;719\&quot;/&amp;gt;&amp;lt;w:vAlign w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;/w:tcPr&amp;gt;&amp;lt;w:p&amp;gt;&amp;lt;w:pPr&amp;gt;&amp;lt;w:jc w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;/w:pPr&amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;&quot; + index + &quot;&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&amp;lt;/w:tc&amp;gt;&amp;lt;w:tc&amp;gt;&amp;lt;w:tcPr&amp;gt;&amp;lt;w:tcW w:type=\&quot;dxa\&quot; w:w=\&quot;2682\&quot;/&amp;gt;&amp;lt;w:vAlign w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;/w:tcPr&amp;gt;&amp;lt;w:p&amp;gt;&amp;lt;w:pPr&amp;gt;&amp;lt;w:jc w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;/w:pPr&amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;&quot; + material
        .getMaterialName() + &quot;&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&amp;lt;/w:tc&amp;gt;&amp;lt;w:tc&amp;gt;&amp;lt;w:tcPr&amp;gt;&amp;lt;w:tcW w:type=\&quot;dxa\&quot; w:w=\&quot;1433\&quot;/&amp;gt;&amp;lt;w:vAlign w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;/w:tcPr&amp;gt;&amp;lt;w:p&amp;gt;&amp;lt;w:pPr&amp;gt;&amp;lt;w:jc w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;/w:pPr&amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;&quot; + material
            .getMaterialModel() + &quot;&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&amp;lt;/w:tc&amp;gt;&amp;lt;w:tc&amp;gt;&amp;lt;w:tcPr&amp;gt;&amp;lt;w:tcW w:type=\&quot;dxa\&quot; w:w=\&quot;813\&quot;/&amp;gt;&amp;lt;w:vAlign w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;/w:tcPr&amp;gt;&amp;lt;w:p&amp;gt;&amp;lt;w:pPr&amp;gt;&amp;lt;w:jc w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;/w:pPr&amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;&quot; + material
                .getUnit() + &quot;&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&amp;lt;/w:tc&amp;gt;&amp;lt;w:tc&amp;gt;&amp;lt;w:tcPr&amp;gt;&amp;lt;w:tcW w:type=\&quot;dxa\&quot; w:w=\&quot;813\&quot;/&amp;gt;&amp;lt;w:vAlign w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;/w:tcPr&amp;gt;&amp;lt;w:p&amp;gt;&amp;lt;w:pPr&amp;gt;&amp;lt;w:jc w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;/w:pPr&amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;&quot; + material
                    .getQuantity() + &quot;&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&amp;lt;/w:tc&amp;gt;&amp;lt;w:tc&amp;gt;&amp;lt;w:tcPr&amp;gt;&amp;lt;w:tcW w:type=\&quot;dxa\&quot; w:w=\&quot;756\&quot;/&amp;gt;&amp;lt;w:vAlign w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;/w:tcPr&amp;gt;&amp;lt;w:p&amp;gt;&amp;lt;w:pPr&amp;gt;&amp;lt;w:jc w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;/w:pPr&amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;&quot; + material
                        .getUnitPrice() + &quot;&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&amp;lt;/w:tc&amp;gt;&amp;lt;w:tc&amp;gt;&amp;lt;w:tcPr&amp;gt;&amp;lt;w:tcW w:type=\&quot;dxa\&quot; w:w=\&quot;816\&quot;/&amp;gt;&amp;lt;w:vAlign w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;/w:tcPr&amp;gt;&amp;lt;w:p&amp;gt;&amp;lt;w:pPr&amp;gt;&amp;lt;w:jc w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;/w:pPr&amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;&quot; + material
                            .getTotalCost() + &quot;&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&amp;lt;/w:tc&amp;gt;&amp;lt;w:tc&amp;gt;&amp;lt;w:tcPr&amp;gt;&amp;lt;w:tcW w:type=\&quot;dxa\&quot; w:w=\&quot;968\&quot;/&amp;gt;&amp;lt;w:vAlign w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;/w:tcPr&amp;gt;&amp;lt;w:p&amp;gt;&amp;lt;w:pPr&amp;gt;&amp;lt;w:jc w:val=\&quot;center\&quot;/&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;/w:pPr&amp;gt;&amp;lt;w:r&amp;gt;&amp;lt;w:rPr&amp;gt;&amp;lt;w:rFonts w:hint=\&quot;eastAsia\&quot;/&amp;gt;&amp;lt;/w:rPr&amp;gt;&amp;lt;w:t&amp;gt;&quot; + material
                                .getRemark() + &quot;&amp;lt;/w:t&amp;gt;&amp;lt;/w:r&amp;gt;&amp;lt;/w:p&amp;gt;&amp;lt;/w:tc&amp;gt;&amp;lt;/w:tr&amp;gt;&quot;;
    tbl_tr.append(tr);
    index++;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最后生成pdf比较简单：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;OutputStream os = new FileOutputStream(destPath);
Docx4J.toPDF(wordMLPackage, os);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;遇到了一个坑，就是生成pdf有点慢，在本地调试接口的时候每次都是响应时间都过了还没好，但放到服务器上就没有问题了。&lt;/p&gt;
</content>
    <author>
      <name>ouyanghan</name>
      <uri>http://ouyanghan.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>mysql批量更新的几种方式</title>
    <link href="http://ouyanghan.com/mysqlBatchUpdate"/>
    <updated>2016-03-04T00:00:00+08:00</updated>
    <id>http://ouyanghan.com/mysqlBatchUpdate</id>
    <content type="html">&lt;p&gt;最近安排我去帮同事做基础数据的导入，知道了一些老师没教过的批量更新的黑科技，特整理一下：&lt;/p&gt;

&lt;p&gt;首先先假设有student表吧，有name，age，class三个column，主键是name。&lt;/p&gt;

&lt;p&gt;基础数据：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO student (name, age, class)
VALUES
	(&#39;张三&#39;, &#39;3&#39;, &#39;三班&#39;),
	(&#39;李四&#39;, &#39;4&#39;, &#39;四班&#39;),
	(&#39;王五&#39;, &#39;5&#39;, &#39;五班&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当我们要把张三换到二班：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;update student set class = &#39;二班&#39; 
where name = &#39;张三&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当我们要把张三、李四、王五都换到二班去，前提是不能删除后新增，毕竟删除有风险，断个电啥的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;update student set class = &#39;二班&#39; 
where name in (&#39;张三&#39;,&#39;李四&#39;,&#39;王五&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面这条语句只适用于所有同学都换到二班的情况，现在他们都在二班了，把他们还原到原来班级的话，就不适用了，只能这样先：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;update student set class = &#39;三班&#39; where name = &#39;张三&#39;;
...                        &#39;四班&#39;  ...         &#39;李四&#39;;
...                        &#39;五班&#39;  ...         &#39;王五&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;那么一个foreach，循环上述3条语句，这也是很好实现的。问题就是当成千上万条数据，那么就有成千上万个数据库连接，这样是效率很低的，我们考虑一条sql完成批量更新不同字段，下面有三种方式。&lt;/p&gt;

&lt;h2 id=&quot;case-when&quot;&gt;case when&lt;/h2&gt;

&lt;p&gt;二班所有人都回到原班级：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;UPDATE student SET class = 
CASE
	WHEN NAME = &#39;张三&#39; THEN &#39;三班&#39;
	WHEN NAME = &#39;李四&#39; THEN &#39;四班&#39;
	WHEN NAME = &#39;王五&#39; THEN &#39;五班&#39; 
END;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样我们就实现了一条sql完成批量更新的任务了，具体实现呢，也很直观，用循环去拼接sql。&lt;/p&gt;

&lt;p&gt;不好的地方：如果是修改很多字段，那么每个字段都必须有case，如果修改的记录很多，when也同样那么多，这样的话，这条sql就太长了吧。。&lt;/p&gt;

&lt;h2 id=&quot;replace-into&quot;&gt;replace into&lt;/h2&gt;

&lt;p&gt;还是假设他们在二班，二班所有人都回到原班级：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;REPLACE INTO student (name,class) 
values 
	(&#39;张三&#39;,&#39;三班&#39;),
	(&#39;李四&#39;,&#39;四班&#39;),
	(&#39;王五&#39;,&#39;五班&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;首先说下 replace into，它和 insert into 类似，可以说是insert into的加强版。&lt;/p&gt;

&lt;p&gt;加强的地方在于：replace into 先尝试插入数据到表，如果发现表中已有此行数据（根据主键或唯一索引）则先删除原数据，然后再插入新数据，否则就是直接插入新数据。&lt;/p&gt;

&lt;p&gt;我们看下上面这条语句的执行结果，受影响的行是6，说明先删了3条，再增了3条，增加的三条age字段都是null，因为我们没有给age字段的数据，所以真正完整的sql应该是这样：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;REPLACE INTO student (name,age,class) 
values 
	(&#39;张三&#39;,&#39;3&#39;,&#39;三班&#39;),
	(&#39;李四&#39;,&#39;4&#39;,&#39;四班&#39;),
	(&#39;王五&#39;,&#39;5&#39;,&#39;五班&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;注意的地方：要记得把所有的字段都放进去吧,不然age字段就没啦。必须要有主键或者索引，如果有多个索引，它会删除所有索引匹配到的所有记录的。&lt;/p&gt;

&lt;h2 id=&quot;on-duplicate-key-update&quot;&gt;on duplicate key update&lt;/h2&gt;

&lt;p&gt;还是假设他们在二班，二班所有人都回到原班级：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO student (NAME, class)
VALUES
	(&#39;张三&#39;, &#39;三班&#39;),
	(&#39;李四&#39;, &#39;四班&#39;),
	(&#39;王五&#39;, &#39;五班&#39;) 
ON DUPLICATE KEY UPDATE class = VALUES(class);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果只是单纯的修改的话，上述语句已经达到了我们的要求。这种方式也是先增，如果记录中有则update。修改多条记录的话，就是这样：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO student (NAME, age, class)
VALUES
	(&#39;张三&#39;, 1, &#39;三班&#39;),
	(&#39;李四&#39;, 1, &#39;四班&#39;),
	(&#39;王五&#39;, 1, &#39;五班&#39;) 
ON DUPLICATE KEY UPDATE 
	class = VALUES(class),
	age = VALUES(age);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;要注意的是：还是需要主键或索引的。&lt;/p&gt;

</content>
    <author>
      <name>ouyanghan</name>
      <uri>http://ouyanghan.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>我的博客是怎么实现的</title>
    <link href="http://ouyanghan.com/myblog"/>
    <updated>2016-02-19T00:00:00+08:00</updated>
    <id>http://ouyanghan.com/myblog</id>
    <content type="html">&lt;p&gt;我的博客呢，目前是基于github pages和jekyll运行的，除了域名花了点钱，别的都是free~&lt;/p&gt;

&lt;p&gt;所以说，只要有网页制作的基础再加上我这篇教程，有一个自己的网站并不是什么难事了呢。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;需要知道的是：&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;github：代码托管平台，代码都可以放在那里哦，再也不怕丢了。&lt;/li&gt;
  &lt;li&gt;github pages：在github创建一个特定的代码仓库，那么这里面的代码就可以生成自己的网站了。&lt;/li&gt;
  &lt;li&gt;jekyll：一个生成静态网页的工具，主要用于博客。&lt;/li&gt;
  &lt;li&gt;ps.我说的是不完整的，但是可以先暂且这么理解&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;那么思路是不是清晰了呢：在github上创建代码库，自己的电脑用jekyll生成静态网页，然后上传到代码库里，github pages就自动帮你生成网站了。或者你不需要jekyll，自己写静态网页，上传上去也是OK的啦。&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;安装github&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;see this&lt;/a&gt;，不是我懒啊，我都先写了一遍，发现还是官方的好：P&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;安装jekyll&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyll-windows.juthilo.com/1-ruby-and-devkit/&quot;&gt;see this&lt;/a&gt;，有疑问欢迎讨论嘿嘿嘿。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;炫酷一点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;找一些好看的模板，&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;see this&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;评论用的是：&lt;a href=&quot;https://disqus.com/&quot;&gt;disqus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;分享用的是：&lt;a href=&quot;http://www.jiathis.com/&quot;&gt;JiaThis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;站内搜索用的是：&lt;a href=&quot;https://swiftype.com/&quot;&gt;swiftype&lt;/a&gt;，好像是只免费一段时间，先用着看吧。&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>ouyanghan</name>
      <uri>http://ouyanghan.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="http://ouyanghan.com/test"/>
    <updated>2016-02-15T00:00:00+08:00</updated>
    <id>http://ouyanghan.com/test</id>
    <content type="html">&lt;p&gt;测试一下咯&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;测试&lt;/h2&gt;

&lt;p&gt;嘿嘿嘿。&lt;/p&gt;
</content>
    <author>
      <name>ouyanghan</name>
      <uri>http://ouyanghan.com/about/</uri>
    </author>
  </entry>
  
</feed>