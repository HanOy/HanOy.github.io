<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>欧阳晗的博客</title>
    <description>hoy</description>
    <link>ouyanghan.com/</link>
    <atom:link href="ouyanghan.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 04 Mar 2016 10:38:14 +0800</pubDate>
    <lastBuildDate>Fri, 04 Mar 2016 10:38:14 +0800</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>mysql批量更新的几种方式</title>
        <description>&lt;p&gt;最近安排我去帮同事做基础数据的导入，知道了一些老师没教过的批量更新的黑科技，特整理一下：&lt;/p&gt;

&lt;p&gt;首先先假设有student表吧，有name，age，class三个column，主键是name。&lt;/p&gt;

&lt;p&gt;基础数据：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO student (name, age, class)
VALUES
	(&#39;张三&#39;, &#39;3&#39;, &#39;三班&#39;),
	(&#39;李四&#39;, &#39;4&#39;, &#39;四班&#39;),
	(&#39;王五&#39;, &#39;5&#39;, &#39;五班&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当我们要把张三换到二班：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;update student set class = &#39;二班&#39; 
where name = &#39;张三&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当我们要把张三、李四、王五都换到二班去，前提是不能删除后新增，毕竟删除有风险，断个电啥的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;update student set class = &#39;二班&#39; 
where name in (&#39;张三&#39;,&#39;李四&#39;,&#39;王五&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面这条语句只适用于所有同学都换到二班的情况，现在他们都在二班了，把他们还原到原来班级的话，就不适用了，只能这样先：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;update student set class = &#39;三班&#39; where name = &#39;张三&#39;;
...                        &#39;四班&#39;  ...         &#39;李四&#39;;
...                        &#39;五班&#39;  ...         &#39;王五&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;那么一个foreach，循环上述3条语句，这也是很好实现的。问题就是当成千上万条数据，那么就有成千上万个数据库连接，这样是效率很低的，我们考虑一条sql完成批量更新不同字段，下面有三种方式。&lt;/p&gt;

&lt;h2 id=&quot;case-when&quot;&gt;case when&lt;/h2&gt;

&lt;p&gt;二班所有人都回到原班级：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;UPDATE student SET class = 
CASE
	WHEN NAME = &#39;张三&#39; THEN &#39;三班&#39;
	WHEN NAME = &#39;李四&#39; THEN &#39;四班&#39;
	WHEN NAME = &#39;王五&#39; THEN &#39;五班&#39; 
END;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样我们就实现了一条sql完成批量更新的任务了，具体实现呢，也很直观，用循环去拼接sql。&lt;/p&gt;

&lt;p&gt;不好的地方：如果是修改很多字段，那么每个字段都必须有case，如果修改的记录很多，when也同样那么多，这样的话，这条sql就太长了吧。。&lt;/p&gt;

&lt;h2 id=&quot;replace-into&quot;&gt;replace into&lt;/h2&gt;

&lt;p&gt;还是假设他们在二班，二班所有人都回到原班级：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;REPLACE INTO student (name,class) 
values 
	(&#39;张三&#39;,&#39;三班&#39;),
	(&#39;李四&#39;,&#39;四班&#39;),
	(&#39;王五&#39;,&#39;五班&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;首先说下 replace into，它和 insert into 类似，可以说是insert into的加强版。&lt;/p&gt;

&lt;p&gt;加强的地方在于：replace into 先尝试插入数据到表，如果发现表中已有此行数据（根据主键或唯一索引）则先删除原数据，然后再插入新数据，否则就是直接插入新数据。&lt;/p&gt;

&lt;p&gt;我们看下上面这条语句的执行结果，受影响的行是6，说明先删了3条，再增了3条，增加的三条age字段都是null，因为我们没有给age字段的数据，所以真正完整的sql应该是这样：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;REPLACE INTO student (name,age,class) 
values 
	(&#39;张三&#39;,&#39;3&#39;,&#39;三班&#39;),
	(&#39;李四&#39;,&#39;4&#39;,&#39;四班&#39;),
	(&#39;王五&#39;,&#39;5&#39;,&#39;五班&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;注意的地方：要记得把所有的字段都放进去吧,不然age字段就没啦。必须要有主键或者索引，如果有多个索引，它会删除所有索引匹配到的所有记录的。&lt;/p&gt;

&lt;h2 id=&quot;on-duplicate-key-update&quot;&gt;on duplicate key update&lt;/h2&gt;

&lt;p&gt;还是假设他们在二班，二班所有人都回到原班级：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO student (NAME, class)
VALUES
	(&#39;张三&#39;, &#39;三班&#39;),
	(&#39;李四&#39;, &#39;四班&#39;),
	(&#39;王五&#39;, &#39;五班&#39;) 
ON DUPLICATE KEY UPDATE class = VALUES(class);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果只是单纯的修改的话，上述语句已经达到了我们的要求。这种方式也是先增，如果记录中有则update。修改多条记录的话，就是这样：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO student (NAME, age, class)
VALUES
	(&#39;张三&#39;, 1, &#39;三班&#39;),
	(&#39;李四&#39;, 1, &#39;四班&#39;),
	(&#39;王五&#39;, 1, &#39;五班&#39;) 
ON DUPLICATE KEY UPDATE 
	class = VALUES(class),
	age = VALUES(age);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;要注意的是：还是需要主键或索引的。&lt;/p&gt;

</description>
        <pubDate>Fri, 04 Mar 2016 00:00:00 +0800</pubDate>
        <link>ouyanghan.com/blog/2016/03/04/mysqlBatchUpdate.html</link>
        <guid isPermaLink="true">ouyanghan.com/blog/2016/03/04/mysqlBatchUpdate.html</guid>
        
        <category>Chinese</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>我的博客是怎么实现的</title>
        <description>&lt;p&gt;我的博客呢，目前是基于github pages和jekyll运行的，除了域名花了点钱，别的都是free~&lt;/p&gt;

&lt;p&gt;所以说，只要有网页制作的基础再加上我这篇教程，有一个自己的网站并不是什么难事了呢。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;需要知道的是：&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;github：代码托管平台，代码都可以放在那里哦，再也不怕丢了。&lt;/li&gt;
  &lt;li&gt;github pages：在github创建一个特定的代码仓库，那么这里面的代码就可以生成自己的网站了。&lt;/li&gt;
  &lt;li&gt;jekyll：一个生成静态网页的工具，主要用于博客。&lt;/li&gt;
  &lt;li&gt;ps.我说的是不完整的，但是可以先暂且这么理解&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;那么思路是不是清晰了呢：在github上创建代码库，自己的电脑用jekyll生成静态网页，然后上传到代码库里，github pages就自动帮你生成网站了。或者你不需要jekyll，自己写静态网页，上传上去也是OK的啦。&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;安装github&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;see this&lt;/a&gt;，不是我懒啊，我都先写了一遍，发现还是官方的好：P&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;安装jekyll&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyll-windows.juthilo.com/1-ruby-and-devkit/&quot;&gt;see this&lt;/a&gt;，有疑问欢迎讨论嘿嘿嘿。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;炫酷一点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;找一些好看的模板，&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;see this&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;评论用的是：&lt;a href=&quot;https://disqus.com/&quot;&gt;disqus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;分享用的是：&lt;a href=&quot;http://www.jiathis.com/&quot;&gt;JiaThis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;站内搜索用的是：&lt;a href=&quot;https://swiftype.com/&quot;&gt;swiftype&lt;/a&gt;，好像是只免费一段时间，先用着看吧。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 19 Feb 2016 00:00:00 +0800</pubDate>
        <link>ouyanghan.com/blog/2016/02/19/myblog.html</link>
        <guid isPermaLink="true">ouyanghan.com/blog/2016/02/19/myblog.html</guid>
        
        <category>Chinese</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>测试</title>
        <description>&lt;p&gt;测试一下咯&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;测试&lt;/h2&gt;

&lt;p&gt;嘿嘿嘿。&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Feb 2016 00:00:00 +0800</pubDate>
        <link>ouyanghan.com/blog/2016/02/15/test.html</link>
        <guid isPermaLink="true">ouyanghan.com/blog/2016/02/15/test.html</guid>
        
        <category>chinese</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
